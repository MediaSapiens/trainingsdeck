<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. -->
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook" version="5.0">

    <para>This chapter is a collection of recipes for common tasks in pt_extlist.</para>
    <section>
        <title>Insert the output of an extlist / extbase plugin via typoscript.</title>
        <para>It is quite simple to insert an extlist / extbase plugin in any mode as a widget directly via typoscript. The following typoscript snippet defines a widget to render a pager anywhere you like.</para>
        <para/>

        <itemizedlist>
            <listitem>
                <para>controller / action</para>
                <para>Defines the called controller / action pair. That would be Pager / show for a pager, Filterbox / show for a filterbox and List / list for a list.</para>
            </listitem>
            <listitem>
                <para>switchableControllerActions</para>
                <para>Defines all callable controller / action combinations within this widget. Must contain at least the default controller / action defined above.</para>
            </listitem>
            <listitem>
                <para>listIdentifier</para>
                <para>listIdentifier is the only needed configuration. Set it to the desired list configuration.</para>
            </listitem>
        </itemizedlist>

        <programlisting><![CDATA[
pagerWidget = USER
pagerWidget {
    userFunc = tx_extbase_core_bootstrap->run
    pluginName = Pi1
    extensionName = PtExtlist
    controller = Pager
    action = show
    switchableControllerActions {
        Pager {
            1 = show
        }
    }

    persistence =< plugin.tx_ptextlist.persistence
    view =< plugin.tx_ptextlist.view
    settings =< plugin.tx_ptextlist.settings

    settings {
        listIdentifier = YOURLISTIDENTIFIER
    }
}]]></programlisting>
    </section>




    <section>
            <title>Exchange the default template by controller / action.</title>
            <para>In default extbase it is only possible to exhenage the complete template folder. Pt_extlist enables you to exchange a single template per list. The example below shows you how to exchange a template. In general it is

                controller.THECONTROLLERNAME.THEACTIONNAME.template = PATHTOTHETEMPLATE

                This holds for any controller / action pair. Check the URL or the template folder for the controller and action names.</para>
            <para/>

            <programlisting><![CDATA[
    plugin.tx_ptextlist.settings {
        	listConfig.demolist {
    	    controller.List.list.template = EXT:my_extension/Resources/Private/Templates/NewTemplate.html
    	}
    }
    }]]></programlisting>
    </section>


    

    <section>
        <title>Export the list data as a PDF document</title>
        <para>The pdf exporter uses the domPdf library to render the list in HTML-format which is generated by a special fluid template to PDF. It is recommended to use the extension pt_dompdf, which on the one hand provides the dompdf sources and on the other hand fluid-viewHelpers to wrap special methods provided by the domPdf library.</para>
        <para>So all you have to do, is to install the pt_dompdf extension and select the export type: PDF export and you get the PDF table in a nice default layout.</para>

        <sect1>
            <title>Change size and orientation</title>
            <para>You can change the page size and the orientation of the PDF in the settings (have a look into the TSRef for the posible values):</para>

            <programlisting><![CDATA[
plugin.tx_ptextlist.settings.export.exportConfigs.pdfExport {
    paperSize = a4
    paperOrientation =  portrait
}]]></programlisting>
        </sect1>
        
        <sect1>
            <title>Change the appearance of the document</title>
            <para>To change the appearance of the document, you can first edit the CSS stylesheet of the document and second alter the fluid template as well. It is recommended to make a copy of the files and change the paths in the settings:</para>
            <programlisting><![CDATA[
    plugin.tx_ptextlist.settings.export.exportConfigs.pdfExport {
    templatePath = typo3conf/ext/pt_extlist/Resources/Private/Templates/Export/PDF/Default.html
    cssFilePath =  EXT:pt_extlist/Resources/Public/CSS/Export/Pdf.css
    
    headerPartial = Export/PDF/ListHeader
    bodyPartial = Export/PDF/ListBody
    aggregateRowsPartial = Export/PDF/AggregateRows
}
]]></programlisting>
        
            <para>The cssFilePath parameter can either be set as an absolute path on the server or by an URL.</para>
        </sect1>

        <sect1>
            <title>Add a page number to the document</title>
            <para>In domPdf it is a little bit ugly to add page numbers as dynamic changing values to the document. It is done by an inline PHP script in the template. Pt_dompdf provides a viewHelper which generates this inline PHP for you.
            Add this viewHelper to the BODY part of your HTML template. The markers {PAGE_NUM} and {PAGE_COUNT} can be used to add the dynamic values to the page.
            </para>

            <programlisting><![CDATA[
{namespace dompdf=Tx_PtDompdf_ViewHelpers}

<dompdf:staticText position="bottom-right">
    Page {PAGE_NUM} of {PAGE_COUNT}
</dompdf:staticText>
]]></programlisting>
        </sect1>
    </section>
</section>
