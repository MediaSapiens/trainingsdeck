
#content fields

#main tmpl
lib.field_content = COA
lib.field_content{

  ## content
  10 < styles.content.get
  10.select.languageField = sys_language_uid
  10.select.where = colPos = 0

  ##about content
  #20 < .10
  #20.select.where = colPos = 1

  #30 < .10
  #30.select.where = colPos = 2

}


#1 col tmpl
lib.field_content = COA
lib.field_content{
  ##main content
  10 < styles.content.get
  10.select.languageField = sys_language_uid
  10.select.where = colPos = 0
}


#2 col tmpl
lib.field_leftCol < lib.field_intro
lib.field_rightCol < lib.field_content
lib.field_hero < lib.field_intro
lib.field_hero.select.where = colPos = 3

#grid storage
plugin.tx_dce.persistence.storagePid = {$site.storagePid}


currentPID =TEXT
currentPID.insertData = 1
currentPID.data = TSFE:id

lib.mainNavi = COA
lib.mainNavi.stdWrap.wrap = <ul>|</ul>

#lib.mainNavi.10 < currentPID

#home page
lib.mainNavi.10 = HMENU
lib.mainNavi.10{
    special = list
    special.value = {$site.rootOfPage}
    includeNotInMenu = 1
    1 = TMENU
    1 {
        noBlur = 1
        NO {
          doNotLinkIt = 1
          wrapItemAndSub.insertData = 1
          wrapItemAndSub = <li><a href="{$site.siteURL}">|</a></li>
        }
    }
}
[globalVar = TSFE:id= {$site.rootOfPage}]
lib.mainNavi.10.1.NO.wrapItemAndSub = <li class="active"><a href="{$site.siteURL}">|</a></li>
[global]

lib.mainNavi.20 = HMENU
lib.mainNavi.20{
    entryLevel = 0
    1 = TMENU
    1 {
      expAll = 1
      noBlur = 1
      NO{
        wrapItemAndSub = <li>|</li>
        #wrapItemAndSub.insertData = 1
        /*
        wrapItemAndSub.insertData = 1
        wrapItemAndSub = {$currentPID.data}|</li>
        before.stdWrap.cObject = COA
        before.stdWrap.cObject{
          10 = TEXT
          10.wrap = <li class="active">
          10.if {
             equals.field = uid
             #value = 16
             value = currentPID
          }
          20 = TEXT
          20.wrap = <li class="nonactive">
          20.if {
             equals.field = uid
             value = currentPID
             negate = 1
          }
        }
        */

        #stdWrap.wrap = <span>|</span>
        #ATagParams = class="link"
        #ATagTitle.field = subtitle // abstract // description // title
        #doNotLinkIt = 1
      }

      ACT < .NO
      ACT = 1
      ACT.wrapItemAndSub = <li class="active">|</li>

      CUR < .ACT
      CUR = 1

      IFSUB < .NO
      IFSUB = 1
      IFSUB{
        #stdWrap.wrap = <span>|<i class="icon-chevron"></i></span>
      }

      ACTIFSUB < .IFSUB
      ACTUBIFS = 1
      ACTIFSUB.wrapItemAndSub = <li class="active">|</li>

      CURIFSUB < .ACTIFSUB
      CURIFSUB = 1

    }

    #2 level
    2 = TMENU
    2 < lib.mainNavi.20.1
    2{
        wrap = <ul class="submenu">|</ul>
    }
}


lib.footerNavi = HMENU
lib.footerNavi{
    special = directory
    special.value = {$site.footerNavi}
    1 = TMENU
    1 {
        noBlur = 1
        target = blank
        wrap = <ul>|</ul>
        NO {
          #automatische Verlinkung des Menüs ausschalten
          doNotLinkIt = 1
          wrapItemAndSub=<li>|</li>
          stdWrap.cObject = CASE
          stdWrap.cObject {
             key.field = doktype
             default = TEXT
             default {
                typolink.parameter.field = uid
                #typolink.target = _blank
                field = title
                stdWrap.htmlSpecialChars = 1
             }
             # 4 = shortcut
             4 = TEXT
             4 {
                field = title
                typolink.parameter.field = shortcut
                #typolink.target = _blank
             }
             # 3 = external url
             3 = TEXT
             3 {
                field = title
                typolink.parameter.field = url
                #typolink.extTarget.field = target
                typolink.target = _blank
             }
          }
        }
        ACT < .NO
        ACT = 1
        ACT.wrapItemAndSub=<li class="active">|</li>
    }
}

#laguage navi
lib.langNavi = COA
lib.langNavi {
    #wrap = <nav class="lang">|</nav>
    10 = HMENU
    10{
        special = language
        special.value = 0,1,2
        special.normalWhenNoLanguage = 0
        wrap = <ul class="nav u-langmenu">|</ul>
        1 = TMENU
        1 {
            noBlur = 1
            # Standard Sprachen
            NO = 1
            NO {
              wrapItemAndSub = <li>|</li>
                #stdWrap.setCurrent = Deutsch || English
                #stdWrap.current = 1
                # Standard-Titel fur den Link ware Seitenttitel
                # => anderer Text als Link-Text (Optionsschift)
                stdWrap.override = de || en || ru
                # Standardma?ige Verlinkung des Menus ausschalten
                # Da diese sonstige GET-Parameter nicht enthalt
                doNotLinkIt = 1
                # Nun wird der Link mit den aktuellen GET-Parametern neu aufgebaut
                stdWrap.typolink.parameter.data = page:uid
                stdWrap.typolink.additionalParams = &L=0 || &L=1 || &L=2
                stdWrap.typolink.addQueryString = 1
                stdWrap.typolink.addQueryString.exclude = L,id,cHash,no_cache
                stdWrap.typolink.addQueryString.method = GET
                stdWrap.typolink.useCacheHash = 0
                stdWrap.typolink.no_cache = 0
                stdWrap.typolink.ATagParams = class = ""
            }
            # Aktive Sprache
            ACT < .NO
            #ACT.stdWrap.typolink.ATagParams = class="active"
            ACT.wrapItemAndSub = <li class="active">|</li>


            # NO + Übersetzung nicht vorhanden
            USERDEF1 < .NO
            # ACT + Übersetzung nicht vorhanden
            USERDEF2 < .ACT
        }
    }
}


lib.copyright = TEXT
lib.copyright{
  data = date:U
  strftime = %Y
  noTrimWrap = |©  |  {$site.copyright}|
}

lib.contact = TEXT
lib.contact.value = {$site.contact}

#id={$site.rootOfPage}&
lib.logo = TEXT
# url for multilingual sites href="./?L={$config.sys_language_uid}"
lib.logo.value = <a href="{$site.siteURL}">{$site.copyright}</a>

#######
# gce elements
#######
tt_content.gridelements_pi1.20.10.setup {

  2 < lib.gridelements.defaultGridSetup
  2 {
    prepend = COA
    prepend {
      10 = IMAGE
      10 {
        required=1
        file.import=uploads/tx_gridelements/
        file.import.data = field:flexform_image
        #file.width = 1400
        #file.height = 200c
        params = class="cover"
      }
      20 = TEXT
      20 {
        data = field:flexform_headline
        #typolink.parameter.data = field:flexform_link
        wrap =<div class="container"><div class="content"><div class="wrap"><h2>|</h2></div></div></div>
      }
    }
  }

  #header content wrapper
  3 < lib.gridelements.defaultGridSetup
  3 {
    prepend = COA
    prepend {

      stdWrap.cObject = CASE
      stdWrap.cObject {
        key.field = flexform_code

        #title/image/content
        default = COA
        default.stdWrap.wrap = <div class="gallery">|</div>
        default {
          10 = IMAGE
          10 {
            required=1
            file.import=uploads/tx_gridelements/
            file.import.data = field:flexform_image
            file.width = 808
            #file.height = 200c
            #params = class="cover"
          }
          20 = COA
          20.stdWrap.wrap = <div class="text-holder">|</div>
          20{
            10 = TEXT
            10 {
              data = field:flexform_title
              wrap = <h2>|</h2>
            }
            20 = TEXT
            20 {
              data = field:flexform_subTitle
              wrap = <em>|</em>
            }
            30 = TEXT
            30 {
              data = field:flexform_content
              wrap = <p>|</p>
            }
          }
        }

        #image/content
        withOutTitle = COA
        withOutTitle.stdWrap.wrap = <div class="gallery type-2">|</div>
        withOutTitle {
          10 = IMAGE
          10 {
           required=1
           file.import=uploads/tx_gridelements/
           file.import.data = field:flexform_image
           file.width = 798
          }
          20 = TEXT
          20 {
            data = field:flexform_content
            wrap = <div class="text-holder"><p>|</p></div>
          }
        }

      }
    }
  }

  #about content wrapper
  4 < lib.gridelements.defaultGridSetup
  4 {
    prepend = COA
    prepend {

      stdWrap.cObject = CASE
      stdWrap.cObject {
        key.field = flexform_code

        #title/image/content
        default = COA
        default.stdWrap.wrap = <div class="title-post">|</div>
        default {
          10 = TEXT
          10 {
            data = field:flexform_title
            wrap = <h2>|</h2>
          }

          20 = TEXT
          20 {
            data = field:flexform_content
            wrap = <div class="text-holder">|</div>
          }
        }

        #image/content
        contentRTE2sides = COA
        contentRTE2sides.stdWrap.wrap = <div class="main">|</div>
        contentRTE2sides {

          10 = TEXT
          10 {
            data = field:flexform_contentLeft
            wrap = <div class="sidebar">|</div>
          }

          20 = TEXT
          20 {
            data = field:flexform_content
            wrap = <div class="content-holder">|</div>
          }
        }

      }

    }
  }


}



## link to list  of pages
lib.menuList = HMENU
lib.menuList{
    special = list
    special.value = {$site.menuListPIDs}
    includeNotInMenu = 1
    1 = TMENU
    1 {
        noBlur = 1
        NO {
        }
    }
}
